import { db } from '../config/FirebaseConfig'

import {
  collection,
  doc,
  addDoc,
  setDoc,
  getDocs,
  query,
  where,
  onSnapshot,
} from 'firebase/firestore'

class FirestoreController {
  //Constructors
  constructor() {
    if (FirestoreController.instance) {
      return FirestoreController.instance
    }

    FirestoreController.instance = this
  }

  //Static functions
  static getInstance() {
    if (!FirestoreController.instance) {
      FirestoreController.instance = new FirestoreController()
    }

    return FirestoreController.instance
  }

  saveUserInDB = async (newUser, setLoading) => {
    console.log(
      `saveUserInDB: Creating a new user in the DB using the FireAuth user obj: ${JSON.stringify(
        newUser
      )}`
    )

    try {
      setLoading(true)

      // Method to add to the db without setting the same id generated by fire auth.
      // Get the reference to the users collection
      // const collectionRef = collection(db, 'users')

      // Set the user document in the users collection
      // await setDoc(collectionRef, newUser)

      await setDoc(doc(db, 'users', `${newUser.uid}`), newUser)

      console.log(`User ${newUser.email} added to Firestore users collection.`)
      return { success: true }
    } catch (e) {
      console.log(
        `saveUserInDB Function: Failed to create a new user in the db with ${JSON.stringify(
          newUser
        )}. Reason: ${e.message}`
      )
      return { success: false, message: e.message }
    } finally {
      setLoading(false)
    }
  }
}

export default FirestoreController
